<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!-- POM file generated with GWT webAppCreator -->
    <modelVersion>4.0.0</modelVersion>
    <groupId>BotLeecherGwt</groupId>
    <artifactId>BotLeecherGwt</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>GWT Maven Archetype</name>

    <properties>
        <!-- Convenience property to set the GWT version -->
        <gwtVersion>2.5.0</gwtVersion>
        <gxt.version>3.0.1</gxt.version>
        <!-- GWT needs at least java 1.5 -->
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
    </properties>
    <repositories>
        <repository>
            <id>sencha-commercial-release</id>
            <name>Sencha commercial releases</name>
            <url>https://maven.sencha.com/repo/gpl-release/</url>
        </repository>
    </repositories>

    <dependencies>
        <!--<dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>1.9.13</version>
        </dependency>-->
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-servlet</artifactId>
            <version>3.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-guice</artifactId>
            <version>1.17.1</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>1.17.1</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>1.17.1</version>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
            <version>1.17.1</version>
        </dependency>
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>0.3m</version>
        </dependency>

        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>2.0.2</version>
        </dependency>
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
            <version>1.1.4</version>
        </dependency>
        <dependency>
            <groupId>de.novanic.gwteventservice</groupId>
            <artifactId>gwteventservice</artifactId>
            <version>1.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.sencha.gxt</groupId>
            <artifactId>gxt</artifactId>
            <version>${gxt.version}</version>
        </dependency>
        <dependency>
            <groupId>fr.botleecher</groupId>
            <artifactId>botleecher_rev</artifactId>
            <version>0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>2.5.0</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>2.5.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.7</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- Generate compiled stuff in the folder used for developing mode -->
        <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

        <plugins>

            <!-- GWT Maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>2.5.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test</goal>
                            <goal>i18n</goal>
                            <goal>generateAsync</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- Plugin configuration. There are many available options, see gwt-maven-plugin
                  documentation at codehaus.org -->
                <configuration>
                    <runTarget>botleecher.html</runTarget>
                    <hostedWebapp>${webappDirectory}</hostedWebapp>
                    <i18nMessagesBundle>botleecher.client.Messages</i18nMessagesBundle>
                </configuration>
            </plugin>

            <!-- Copy static web files before executing gwt:run -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <webappDirectory>${webappDirectory}</webappDirectory>
                </configuration>
            </plugin>
            <!--<plugin>
                <groupId>com.github.joelittlejohn.embedmongo</groupId>
                <artifactId>embedmongo-maven-plugin</artifactId>
                <version>0.1.9</version>
                <executions>
                    <execution>
                        <id>start</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <port>37017</port> &lt;!&ndash; optional, default 27017 &ndash;&gt;
                            &lt;!&ndash;<randomPort>true</randomPort>&ndash;&gt; &lt;!&ndash; optional, default is false, if true allocates a random port and overrides embedmongo.port &ndash;&gt;
                            &lt;!&ndash;<version>2.0.4</version>&ndash;&gt;  &lt;!&ndash; optional, default 2.2.1 &ndash;&gt;
                            <databaseDirectory>F:/botleecher/db</databaseDirectory>  &lt;!&ndash; optional, default is a new dir in java.io.tmpdir &ndash;&gt;
                            <logging>file</logging> &lt;!&ndash; optional (file|console|none), default console &ndash;&gt;
                            <logFile>${project.build.directory}/myfile.log</logFile> &lt;!&ndash; optional, can be used when logging=file, default is ./embedmongo.log &ndash;&gt;
                            <logFileEncoding>utf-8</logFileEncoding> &lt;!&ndash; optional, can be used when logging=file, default is utf-8 &ndash;&gt;
                            &lt;!&ndash;<proxyHost>myproxy.company.com</proxyHost>&ndash;&gt;  &lt;!&ndash; optional, default is none &ndash;&gt;
                            &lt;!&ndash;<proxyPort>8080</proxyPort>&ndash;&gt;  &lt;!&ndash; optional, default 80 &ndash;&gt;
                            <proxyUser>botleecher</proxyUser>  &lt;!&ndash; optional, default is none &ndash;&gt;
                            <proxyPassword>leecher</proxyPassword>  &lt;!&ndash; optional, default is none &ndash;&gt;
                            <bindIp>127.0.0.1</bindIp> &lt;!&ndash; optional, default is to listen on all interfaces &ndash;&gt;
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->
        </plugins>
    </build>

</project>
